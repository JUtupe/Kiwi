name: Release Internal

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Name of version (x.x.x)'
        required: true

jobs:
  setup-release:
    name: Setup release config
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Bump android version
        run: bash ./gradlew bumpVersion --newVersionName ${{ github.event.inputs.versionName }}

  build-aab:
    name: Build release .aab
    runs-on: ubuntu-latest
    needs: setup-release

    steps:
    - name: Build release AAB
      run: bash ./gradlew bundleRelease

    - name: Sign release AAB
      uses: r0adkll/sign-android-release@v1
      id: release_app
      with:
        releaseDirectory: app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload AAB
      uses: actions/upload-artifact@v1
      with:
        name: kiwi-v${{ github.event.inputs.versionName }}
        path: ${{steps.release_app.outputs.signedReleaseFile}}

  build-apk:
    name: Build release .apk
    runs-on: ubuntu-latest
    needs: setup-release

    steps:
      - name: Build release APK
        run: bash ./gradlew assembleRelease --stacktrace

      - name: Sign release APK
        uses: r0adkll/sign-android-release@v1
        id: release_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: kiwi-v${{ github.event.inputs.versionName }}
          path: ${{steps.release_app.outputs.signedReleaseFile}}

  create-release:
    name: Build release .apk
    runs-on: ubuntu-latest
    needs: [build-aab, build-apk]

    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{steps.release_app.outputs.signedReleaseFile}}
            app/build/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release app on google play
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
    - name: Create service_account.json
      id: createServiceAccount
      run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

    - name: Deploy to Play Store (INTERNAL)
      id: deploy
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: service_account.json
        packageName: pl.jutupe.kiwi
        releaseFile: app/build/outputs/bundle/release/app-release.aab
        track: internal

  notify-release:
    - name: Notify about release
      runs-on: ubuntu-latest
      needs: release

      steps:
        - name: Discord notification
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been released on google play.'